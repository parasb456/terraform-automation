name: Build and Deploy Frontend-QA

on:
  pull_request:
    branches:
      - preprod  # Trigger on PRs to the development branch
  workflow_dispatch:



jobs:
  build:
    name: Build, Deploy, Delete Old PR, and Notify Teams
    runs-on: ubuntu-latest
    # env:
    #   VITE_API_RETRY: 3
    #   VITE_BACKEND_URL: "https://moakcasey-backend-qa.azurewebsites.net/api"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies and build app
        run: |
          cd my-app
          npm install
          npm run build --if-present

      # Step 1: Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.NEW_AZURE_CREDENTIALS}}

      # Step 2: Identify and delete older PR environments if they exceed 3
      - name: Check and delete older PR environments if more than 3
        id: delete-pr-environment
        run: |
          echo "Fetching environments for Static Web App..."
          environments=$(az staticwebapp environment list \
            --name "moakcasey-frontend-qa" \
            --resource-group "moakcasey-rg-qa" \
            --query "[].{name:name, createdTime:createdTime}" -o tsv | sort -k2)

          # Count number of environments
          num_environments=$(echo "$environments" | wc -l)

          # Only delete if there are more than 3 environments
          if [ $num_environments -ge 3 ]; then
            oldest_env=$(echo "$environments" | head -n 1 | awk '{print $1}')
            echo "Deleting oldest environment: $oldest_env"
            az staticwebapp environment delete \
              --name "moakcasey-frontend-qa" \
              --resource-group "moakcasey-rg-qa" \
              --environment-name $oldest_env
          else
            echo "Less than 3 environments. No deletion required."
          fi

      # Step 3: Deploy to Azure Static Web App
      - name: Deploy to Azure Static Web App
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_QA }}
          action: "upload"
          app_location: "my-app"
          output_location: "build"

      # Step 4: Extract deployed URL from the deploy step output
      - name: Set Environment URL
        run: echo "environment_url=${{ steps.builddeploy.outputs.static_web_app_url }}" >> $GITHUB_ENV

      - name: Print Deployment URL
        run: |
          echo "Deployment URL: ${{ env.environment_url }}"

      # - name: Notify Teams with deployment status and URL
      #   uses: neonidian/teams-notify-build-status@v3
      #   if: always()
      #   with:
      #     webhookUrl: ${{ secrets.TEAMS_WEBHOOK_URL }}
      #     message: |
      #       ðŸš€ **Build Status Update** ðŸš€
      #       The workflow (MoakCasey for Frontend-QA) has completed with status: **${{ job.status }}**.
      #       ðŸ‘‰ Check out the latest deployment here -> **${{ env.environment_url }}**
      #     titleBackgroundColor: ${{ job.status }}
      #   env:
      #     SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true
