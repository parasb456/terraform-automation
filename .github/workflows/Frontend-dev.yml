name: Build and SonarQube Analysis

on:
  push:
    branches:
      - preprod

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    permissions: 
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # Fetch and display SonarQube results
      - name: Fetch SonarQube Results
        run: |
          # Fetch Quality Gate status
          QUALITY_GATE=$(curl -s "${{ secrets.SONAR_HOST_URL }}/api/project_badges/measure?project=${{ secrets.SONAR_PROJECTKEY }}&metric=alert_status" | jq -r '.measure.value')

          # Fetch bugs, vulnerabilities, code smells, and coverage
          RESULTS=$(curl -s "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=${{ secrets.SONAR_PROJECTKEY }}&metricKeys=bugs,vulnerabilities,code_smells,coverage" | jq '.component.measures')

          BUGS=$(echo $RESULTS | jq -r '.[0].value')
          VULNERABILITIES=$(echo $RESULTS | jq -r '.[1].value')
          CODE_SMELLS=$(echo $RESULTS | jq -r '.[2].value')
          COVERAGE=$(echo $RESULTS | jq -r '.[3].value')

          echo "Quality Gate: $QUALITY_GATE"
          echo "Bugs: $BUGS"
          echo "Vulnerabilities: $VULNERABILITIES"
          echo "Code Smells: $CODE_SMELLS"
          echo "Coverage: $COVERAGE"

      # PR Decoration
      - name: SonarQube Pull Request Comment
        if: always()
        uses: campos-pay/sonarqube-pr-comment@main
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
          sonar_projectkey: ${{ secrets.SONAR_PROJECTKEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repo_name: ${{ github.repository }}
          pr_number: ${{ github.event.pull_request.number }}

      # Optional: Send notification to Teams
      - name: Send notification to Teams
        run: |
          curl -H 'Content-Type: application/json' \
               -d '{
                     "title": "SonarQube Analysis Results",
                     "text": "SonarQube analysis for the project is complete.\\n\\n**Quality Gate**: '"$QUALITY_GATE"'\\n**Bugs**: '"$BUGS"'\\n**Vulnerabilities**: '"$VULNERABILITIES"'\\n**Code Smells**: '"$CODE_SMELLS"'\\n**Coverage**: '"$COVERAGE"'%"
                   }' \
               ${{ secrets.TEAMS_WEBHOOK_URL }}
