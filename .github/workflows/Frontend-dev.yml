name: SonarQube

on:
  pull_request:
    # types: [opened, synchronize, reopened]
    branches:
      - preprod  
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: # permission to comment a PR
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} #sqp_49fa9abfbfc45850f24d32ed000e23caf4ca176f
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} #https://sonar.techdomeaks.com
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       # Fetch and display SonarQube results
      - name: Fetch SonarQube Results
        run: |
          # Fetch Quality Gate status
          QUALITY_GATE=$(curl -s "${{ secrets.SONAR_HOST_URL }}/api/project_badges/measure?project=${{ secrets.SONAR_PROJECTKEY }}&metric=alert_status" | jq -r '.measure.value')

          # Fetch bugs, vulnerabilities, code smells, and coverage
          RESULTS=$(curl -s "${{ secrets.SONAR_HOST_URL }}/api/measures/component?component=${{ secrets.SONAR_PROJECTKEY }}&metricKeys=bugs,vulnerabilities,code_smells,coverage" | jq '.component.measures')

          BUGS=$(echo $RESULTS | jq -r '.[0].value')
          VULNERABILITIES=$(echo $RESULTS | jq -r '.[1].value')
          CODE_SMELLS=$(echo $RESULTS | jq -r '.[2].value')
          COVERAGE=$(echo $RESULTS | jq -r '.[3].value')

          echo "Quality Gate: $QUALITY_GATE"
          echo "Bugs: $BUGS"
          echo "Vulnerabilities: $VULNERABILITIES"
          echo "Code Smells: $CODE_SMELLS"
          echo "Coverage: $COVERAGE"

 # #PR Decoration
      - name: SonarQube Pull Request Comment
        if: always()
        uses: campos-pay/sonarqube-pr-comment@main
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
          sonar_projectkey: ${{ secrets.SONAR_PROJECTKEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repo_name: ${{ github.repository }}
          pr_number: ${{ github.event.pull_request.number }}

      - name: Notify Teams with SonarQube Analysis Results
        uses: neonidian/teams-notify-build-status@v3
        if: always()
        with:
            webhookUrl: ${{ secrets.SONAR_TEAMS_WEBHOOK_URL }}
            message: |
              ðŸ“Š **SonarQube Analysis Results** ðŸ“Š
              SonarQube analysis for the project is complete.
        
              **Quality Gate**: $QUALITY_GATE
              **Bugs**: $BUGS
              **Vulnerabilities**: $VULNERABILITIES
              **Code Smells**: $CODE_SMELLS
              **Coverage**: $COVERAGE%
            titleBackgroundColor: ${{ job.status }}
        